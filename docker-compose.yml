services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:80"
    env_file:
      - ./.env
      - ./backend/.env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    restart: unless-stopped
    container_name: faceitradar-backend
    healthcheck:
      test:
        ["CMD", "/bin/sh", "-c", "wget -q -O- http://localhost:80/ || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - faceitradar-network

  postgres:
    image: postgres:15 # removed -alpine
    platform: linux/amd64
    container_name: faceitradar-db
    env_file:
      - ./.env
      - ./db/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - faceitradar-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4
    container_name: faceitradar-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - faceitradar-network

networks:
  faceitradar-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
